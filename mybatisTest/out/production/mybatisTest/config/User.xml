<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.proj.dao.IUserOperation"><!--声明名字空间，和dao层的接口要一致-->

    <resultMap id="resultListUser" type="User"><!--User为在config_mybatis.xml定义的别名-->
        <id column="id" property="id" />
        <result column="userName" property="userName" />
        <result column="userAge" property="userAge" />
        <result column="userAddress" property="userAddress" />
    </resultMap>
    <select id="selectUserByID" parameterType="int" resultMap="resultListUser">
        select * from user where id = #{id}
    </select>

    <!-- 返回list 的select 语句，注意 resultMap 的值是指向前面定义好的 -->
    <select id="selectUsers" parameterType="string" resultMap="resultListUser">
        select * from user where userName like #{userName}
    </select>

    <!--执行增加操作的SQL语句。id和parameterType
           分别与IUserOperation接口中的addUser方法的名字和
           参数类型一致。以#{name}的形式引用User参数
           的name属性，MyBatis将使用反射读取User参数
           的此属性。#{name}中name大小写敏感。引用其他
           的属性与此一致。useGeneratedKeys设置
           为"true"表明要MyBatis获取由数据库自动生成的主
           键；keyProperty="id"指定把获取到的主键值注入
           到Student的id属性,这里id为数据表里的主键名称-->
    <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user(username, userage, useraddress) VALUES (#{userName}, #{userAge}, #{userAddress})

    </insert>

    <update id="updateUser" parameterType="User">
        update user set username=#{userName},userage=#{userAge},useraddress=#{userAddress} where id=#{id}
    </update>

    <delete id="deleteUser">
        delete from user where id=#{id}
    </delete>

    <!-- User 联合Article进行查询 方法之二的配置 (多对一的方式) -->
    <resultMap id="resultUserArticleList" type="Article">
        <id property="aid" column="aid" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <association property="user" javaType="User" resultMap="resultListUser" />
    </resultMap>

    <select id="getUserArticles" parameterType="int" resultMap="resultUserArticleList">
        select user.id,user.userName,user.userAddress,article.aid,article.title,article.content from user,article
        where user.id=article.userid and user.id=#{id}
    </select>

</mapper>